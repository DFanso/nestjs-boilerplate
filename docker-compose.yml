version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: nestjs-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nestjs_boilerplate}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - nestjs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: nestjs-app
    restart: unless-stopped
    ports:
      - '${APP_PORT:-9000}:9000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-nestjs_boilerplate}
      - JWT_PRIVATE_KEY_PATH=/app/keys/private.pem
      - JWT_PUBLIC_KEY_PATH=/app/keys/public.pem
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nestjs-network
    # Keys are generated inside the container, no need to mount
    command: sh -c "npx prisma migrate deploy && node dist/main.js"

  # Development service (optional)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: nestjs-app-dev
    restart: unless-stopped
    ports:
      - '${DEV_PORT:-3000}:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-nestjs_boilerplate}
      - JWT_PRIVATE_KEY_PATH=/app/keys/private.pem
      - JWT_PUBLIC_KEY_PATH=/app/keys/public.pem
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nestjs-network
    volumes:
      - .:/app
      - /app/node_modules
      # Keys are generated inside the container during build
    command: sh -c "npx prisma migrate dev && pnpm start:dev"
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local

networks:
  nestjs-network:
    driver: bridge 